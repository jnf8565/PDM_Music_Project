import unittest
from unittest.mock import patch
from playlists import create_playlist, delete_playlist, get_pid

class TestPlaylistFunctions(unittest.TestCase):
    test_uid = 1  # a test user ID in your test DB
    
    def setUp(self):
        # Clean up any old test data before each test
        from playlists import query
        query("DELETE FROM createsp WHERE pid IN (SELECT pid FROM playlist WHERE name='Test Playlist')")
        query("DELETE FROM playlist WHERE name='Test Playlist'")

    @patch('builtins.print')  # suppress printed output in test
    @patch('builtins.input', side_effect=['Test Playlist'])
    def test_add_and_delete_playlist(self, mock_input, mock_print):
        # Create playlist (mock input gives the name automatically)
        pid = create_playlist(self.test_uid)
        self.assertIsNotNone(pid, "PID should not be None after creation")

        # Verify playlist exists in DB
        fetched_pid = get_pid("Test Playlist")
        self.assertEqual(pid, fetched_pid, "PID from DB should match returned PID")

        with patch('builtins.input', side_effect=['Test Playlist']):
            delete_playlist()

        # Verify playlist no longer exists
        fetched_pid = get_pid("Test Playlist")
        self.assertIsNone(fetched_pid, "Playlist should be deleted")

unittest.main()